// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AssignRoleToOrg(ctx context.Context, arg AssignRoleToOrgParams) (OrganisationRole, error)
	AssignRoleToUser(ctx context.Context, arg AssignRoleToUserParams) error
	CreateApplication(ctx context.Context, arg CreateApplicationParams) (Application, error)
	CreateApplicationConfig(ctx context.Context, arg CreateApplicationConfigParams) (ApplicationConfig, error)
	CreateModel(ctx context.Context, arg CreateModelParams) (Model, error)
	CreateOrg(ctx context.Context, name string) (Organisation, error)
	CreatePolicy(ctx context.Context, arg CreatePolicyParams) (Policy, error)
	CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error)
	CreateUsageMetric(ctx context.Context, arg CreateUsageMetricParams) (UsageMetric, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteApplication(ctx context.Context, id uuid.UUID) error
	DeleteApplicationConfig(ctx context.Context, id uuid.UUID) error
	DeleteModel(ctx context.Context, id uuid.UUID) error
	DeletePolicy(ctx context.Context, id uuid.UUID) error
	DeleteRole(ctx context.Context, id uuid.UUID) error
	DisableModel(ctx context.Context, id uuid.UUID) error
	DisablePolicy(ctx context.Context, id uuid.UUID) error
	EnableModel(ctx context.Context, id uuid.UUID) error
	EnablePolicy(ctx context.Context, id uuid.UUID) error
	EnsureOrgMembership(ctx context.Context, arg EnsureOrgMembershipParams) error
	FindOrgByID(ctx context.Context, id uuid.UUID) (Organisation, error)
	FindRoleByID(ctx context.Context, id uuid.UUID) (Role, error)
	FindRoleByName(ctx context.Context, name string) (Role, error)
	FindUserBySubOrEmail(ctx context.Context, arg FindUserBySubOrEmailParams) (User, error)
	GetApplication(ctx context.Context, id uuid.UUID) (Application, error)
	GetApplicationByName(ctx context.Context, arg GetApplicationByNameParams) (Application, error)
	GetApplicationConfig(ctx context.Context, id uuid.UUID) (ApplicationConfig, error)
	GetApplicationConfigByEnv(ctx context.Context, arg GetApplicationConfigByEnvParams) (ApplicationConfig, error)
	GetModel(ctx context.Context, id uuid.UUID) (Model, error)
	GetModelByProviderAndName(ctx context.Context, arg GetModelByProviderAndNameParams) (Model, error)
	GetPoliciesByType(ctx context.Context, arg GetPoliciesByTypeParams) ([]Policy, error)
	GetPolicy(ctx context.Context, id uuid.UUID) (Policy, error)
	GetUsageByModel(ctx context.Context, arg GetUsageByModelParams) ([]GetUsageByModelRow, error)
	GetUsageMetricsByAPIKey(ctx context.Context, arg GetUsageMetricsByAPIKeyParams) ([]UsageMetric, error)
	GetUsageMetricsByApp(ctx context.Context, arg GetUsageMetricsByAppParams) ([]UsageMetric, error)
	GetUsageMetricsByOrg(ctx context.Context, arg GetUsageMetricsByOrgParams) ([]UsageMetric, error)
	ListApplicationConfigs(ctx context.Context, appID uuid.UUID) ([]ApplicationConfig, error)
	ListApplications(ctx context.Context, orgID uuid.UUID) ([]Application, error)
	ListEnabledModels(ctx context.Context, orgID uuid.UUID) ([]Model, error)
	ListEnabledPolicies(ctx context.Context, appID uuid.UUID) ([]Policy, error)
	ListModels(ctx context.Context, orgID uuid.UUID) ([]Model, error)
	ListPolicies(ctx context.Context, appID uuid.UUID) ([]Policy, error)
	ListRoles(ctx context.Context) ([]Role, error)
	SumTokensByApp(ctx context.Context, arg SumTokensByAppParams) (SumTokensByAppRow, error)
	SumTokensByOrg(ctx context.Context, arg SumTokensByOrgParams) (SumTokensByOrgRow, error)
	UpdateApplication(ctx context.Context, arg UpdateApplicationParams) (Application, error)
	UpdateApplicationConfig(ctx context.Context, arg UpdateApplicationConfigParams) (ApplicationConfig, error)
	UpdateModel(ctx context.Context, arg UpdateModelParams) (Model, error)
	UpdatePolicy(ctx context.Context, arg UpdatePolicyParams) (Policy, error)
	UpdateRole(ctx context.Context, arg UpdateRoleParams) (Role, error)
}

var _ Querier = (*Queries)(nil)
