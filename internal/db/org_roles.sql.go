// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: org_roles.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const assignRoleToOrg = `-- name: AssignRoleToOrg :one
INSERT INTO organisation_roles (org_id, role_id)
VALUES ($1, $2)
ON CONFLICT DO NOTHING
RETURNING org_id, role_id, created_at
`

type AssignRoleToOrgParams struct {
	OrgID  uuid.UUID `json:"org_id"`
	RoleID uuid.UUID `json:"role_id"`
}

func (q *Queries) AssignRoleToOrg(ctx context.Context, arg AssignRoleToOrgParams) (OrganisationRole, error) {
	row := q.db.QueryRow(ctx, assignRoleToOrg, arg.OrgID, arg.RoleID)
	var i OrganisationRole
	err := row.Scan(&i.OrgID, &i.RoleID, &i.CreatedAt)
	return i, err
}
