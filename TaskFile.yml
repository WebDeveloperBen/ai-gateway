version: "3"

dotenv: [".env"]

tasks:
  default:
    cmds:
      - task run

  build:
    desc: Build the Go application binary
    cmds:
      - go build -o ./bin/api ./cmd/api

  run:
    desc: Run the application using Docker Compose and Air for hot reloading
    cmds:
      - docker-compose up -d
      - air

  stop:
    desc: Stop the Docker Compose environment
    cmds:
      - docker-compose down

  tests:
    desc: Run all Go tests
    cmds:
      - go test -v ./...

  # -------------------
  # Goose database tasks
  # -------------------

  db:status:
    desc: Show migration status
    cmds:
      - goose -dir ./sqlc/migrations postgres "$POSTGRES_DSN" status

  db:up:
    desc: Apply all up migrations
    cmds:
      - goose -dir ./sqlc/migrations postgres "$POSTGRES_DSN" up

  db:down:
    desc: Roll back the last migration
    cmds:
      - goose -dir ./sqlc/migrations postgres "$POSTGRES_DSN" down

  db:reset:
    desc: Reset the database (rollback all, then migrate up)
    cmds:
      - goose -dir ./sqlc/migrations postgres "$POSTGRES_DSN" reset

  db:create:
    desc: Create a new migration file
    cmds:
      - goose -dir ./sqlc/migrations create {{.CLI_ARGS | default "new_migration"}} sql

  # -------------------
  # SQLC generation
  # -------------------

  generate:
    desc: Generate SQLC code from queries
    cmds:
      - rm -rf ./internal/repository/postgres && sqlc generate

  clean:migrations:
    desc: Remove all migration files (careful!)
    cmds:
      - rm -rf ./db/migrations/*
